document.getElementById('fileInput').addEventListener('change', handleFileUpload);

function handleFileUpload(event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const data = new Uint8Array(e.target.result);
            const workbook = XLSX.read(data, { type: 'array' });
            const sheetName = workbook.SheetNames[0];
            const sheet = workbook.Sheets[sheetName];
            const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
            displayTable(jsonData);
            createChart(jsonData);
        };
        reader.readAsArrayBuffer(file);
    }
}

function displayTable(data) {
    const tableContainer = document.getElementById('tableContainer');
    tableContainer.innerHTML = '';

    const table = document.createElement('table');
    data.forEach((row, index) => {
        const tr = document.createElement('tr');
        row.forEach(cell => {
            const cellElement = document.createElement(index === 0 ? 'th' : 'td');
            cellElement.textContent = cell;
            tr.appendChild(cellElement);
        });
        table.appendChild(tr);
    });

    tableContainer.appendChild(table);
}

function createChart(data) {
    const labels = data.slice(1).map(row => row[1]); // "Cliente Completo" as labels
    const statusData = data.slice(1).map(row => row[3]); // "Status" as data

    const counts = statusData.reduce((acc, status) => {
        acc[status] = (acc[status] || 0) + 1;
        return acc;
    }, {});

    const chartData = {
        labels: Object.keys(counts),
        datasets: [{
            label: 'Status',
            data: Object.values(counts),
            backgroundColor: ['#4CAF50', '#FF6384', '#36A2EB', '#FFCE56']
        }]
    };

    const chartContainer = document.getElementById('chartContainer').getContext('2d');
    new Chart(chartContainer, {
        type: 'pie',
        data: chartData,
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top'
                }
            }
        }
    });
}
